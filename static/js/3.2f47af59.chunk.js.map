{"version":3,"sources":["store/actions/booking.js","components/Booking/Booking.module.css","components/UI/Input/Input.module.css","components/Booking/UserBooking/UserBooking.module.css","components/UI/Input/Input.js","components/Booking/UserBooking/UserBooking.js","components/Booking/Booking.js"],"names":["fetchBookings","dispatch","type","actionTypes","axios","get","then","res","console","log","bookings","Object","keys","data","map","ele","bookId","fetchBookingsSuccess","catch","err","createBooking","formData","post","changeOrigin","response","createBookingSuccess","name","createBookingInit","module","exports","input","props","inputClasses","classes","InputElement","invalid","shouldValidate","isTouched","push","Invalid","className","Label","children","join","elementConfig","value","onChange","changed","UserBooking","state","formFields","elementType","placeholder","validation","required","valid","touched","email","mobile","minLength","maxLength","formValid","formSubmitHandler","event","preventDefault","webinarId","key","webinarData","onCreateBooking","formValidation","rules","isValid","trim","length","inputValueHandler","element","newFormField","updatedElement","target","formIsValid","setState","this","onInitBooking","formElement","Input","booked","to","onSubmit","disabled","onClick","Component","connect","actionCreator","free","premium","withRouter","pageData","concat","find","id","match","params","webId","Fragment","Card","Title","title","Info","instructor","history","replace","url","path","exact","render"],"mappings":"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","file":"static/js/3.2f47af59.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from \"axios\";\n\nexport const fetchBookingsStart = () => {\n    return {\n        type: actionTypes.FETCH_BOOKINGS_START\n    }\n}\n\nexport const fetchBookingsFail = () => {\n    return {\n        type: actionTypes.FETCH_BOOKINGS_FAIL\n    }\n}\n\n\nexport const fetchBookingsSuccess = (bookings) => {\n    return {\n        type: actionTypes.FETCH_BOOKINGS_SUCCESS,\n        bookings: bookings\n    }\n}\n\nexport const fetchBookings = () => {\n    return dispatch => {\n        dispatch(fetchBookingsStart());\n\n        axios.get('/bookings.json')\n            .then(res => {\n                console.log(res);\n                const bookings = Object.keys(res.data).map(ele => ({\n                    ...res.data[ele],\n                    bookId: ele\n                }));\n                dispatch(fetchBookingsSuccess(bookings));\n            })\n            .catch(err => dispatch(fetchBookingsFail()));\n    }\n}\n\nexport const createBookingSuccess = (formData) => {\n    console.log(formData, 'createBookingSuccess');\n    return {\n        type: actionTypes.CREATE_BOOKING_SUCCESS,\n        data: formData\n    }\n}\n\nexport const createBooking = (formData) => {\n    return dispatch => {\n        axios.post('/bookings.json', formData, {changeOrigin: true})\n            .then(response => {\n                dispatch(createBookingSuccess({\n                    ...formData,\n                    bookId: response.data.name\n                }))\n            })\n            .catch(err => console.log(err));\n    }\n}\n\n\nexport const createBookingInit = () => {\n    return {\n        type: actionTypes.BOOKED_INIT\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Booking_Card__3VrMW\",\"Title\":\"Booking_Title__WAy5V\",\"Info\":\"Booking_Info__8IOcB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserBooking\":\"UserBooking_UserBooking___qgVk\"};","import React from 'react';\nimport classes from './Input.module.css';\n\nconst input = (props) => {\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.isTouched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    return (\n        <div className={classes}>\n            <label className={classes.Label}>{props.children}</label>\n            <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed} />\n        </div>\n    );\n}\n\nexport default input;","import React, {Component} from 'react';\nimport Input from '../../UI/Input/Input';\nimport classes from './UserBooking.module.css';\nimport * as actionCreator from '../../../store/actions/booking';\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router\";\n\nclass UserBooking extends Component {\n    state = {\n        formFields: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true,\n\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Email'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            mobile: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Mobile'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 10,\n                    maxLength: 10\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        formValid: false\n    }\n\n    componentWillMount() {\n        this.props.onInitBooking();\n    }\n\n    formSubmitHandler = (event) => {\n        event.preventDefault();\n        console.log('form submitted', this.props.webinarId);\n        \n        const formData = {};\n        for(let key in this.state.formFields){\n            formData[key] = this.state.formFields[key].value;\n        }\n\n        formData['webinar'] = this.props.webinarData;\n\n        console.log(formData);\n        this.props.onCreateBooking(formData);\n    }\n\n    formValidation = (value, rules) => {\n        let isValid = true;\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n\n        return isValid;\n    }\n\n    inputValueHandler = (event, element) => {\n        const newFormField = {...this.state.formFields};\n        const updatedElement = {...newFormField[element]};\n\n        updatedElement.value = event.target.value;\n        updatedElement.valid = this.formValidation(updatedElement.value, updatedElement.validation);\n        updatedElement.touched = true;\n        newFormField[element] = updatedElement;\n\n        let formIsValid = true;\n        for (let key in newFormField) {\n            formIsValid = newFormField[key].valid && formIsValid;\n            if (!formIsValid) {\n                break;\n            }\n        }\n\n        this.setState({formFields: newFormField, formValid: formIsValid});\n    }\n\n    render() {\n        const formElement = Object.keys(this.state.formFields).map(element => {\n            return <Input\n                key={element}\n                elementConfig={this.state.formFields[element].elementConfig}\n                value={this.state.formFields[element].value}\n                invalid={!this.state.formFields[element].valid}\n                shouldValidate={this.state.formFields[element].validation}\n                isTouched={this.state.formFields[element].touched}\n                changed={(event) => this.inputValueHandler(event, element)}\n            />\n        })\n\n        return (\n            <div className={classes.UserBooking}>\n                {this.props.booked ? <Redirect to=\"/\"/> : null}\n                <form onSubmit={this.formSubmitHandler}>\n                    {formElement}\n                    <button disabled={!this.state.formValid} onClick={this.formSubmitHandler}>Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        booked: state.booked\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCreateBooking: (formData) => dispatch(actionCreator.createBooking(formData)),\n        onInitBooking: () => dispatch(actionCreator.createBookingInit())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBooking);","import React from 'react';\nimport {Route} from \"react-router-dom\";\nimport classes from './Booking.module.css';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport UserForm from './UserBooking/UserBooking';\n\nconst booking = (props) => {\n    let pageData = <Redirect to='/'/>\n\n    if (props.free.length !== 0 && props.premium.length !== 0) {\n        const data = props.free.concat(props.premium).find(element => element.id === props.match.params.webId);\n        pageData = (\n            <React.Fragment>\n                <div className={classes.Card}>\n                    <div>\n                        <div className={classes.Title}>{data.title}</div>\n                        <div className={classes.Info}>\n                            <div> March 30, 2021</div>\n                            <div> 5 p.m.</div>\n                            <div>{data.instructor}</div>\n                        </div>\n                        <button onClick={() => props.history.replace(props.match.url + '/booking')}>\n                            Book Your Seat\n                        </button>\n                    </div>\n                </div>\n                <Route path={props.match.url + '/booking'} exact\n                       render={() => <UserForm webinarData={data}/>}\n                />\n            </React.Fragment>\n\n        )\n    }\n\n    return pageData;\n}\n\nconst mapStateToProps = state => {\n    return {\n        free: state.free,\n        premium: state.premium\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(booking));"],"sourceRoot":""}